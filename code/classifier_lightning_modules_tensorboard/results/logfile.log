BED Classifier with Pytorch Lightning. Code Reestructured in modules.
Pytorch Lightning version: 2.2.5
Using BED Classifier
Model shape is tensor([[ 4.1939e-04,  6.8656e-05],
        [ 8.6496e-04, -3.4801e-04],
        [ 1.1731e-03, -1.1796e-03],
        [ 3.1853e-04, -3.3591e-04]], device='cuda:0', grad_fn=<CatBackward0>)
BED Model Arquitecture
BED_CLASSIFIER(
  (loss_fn): BCE_LOSS(
    (bce_smoke): BCEWithLogitsLoss()
    (bce_fire): BCEWithLogitsLoss()
  )
  (smoke_acc): BinaryAccuracy()
  (smoke_pre): BinaryPrecision()
  (smoke_rec): BinaryRecall()
  (smoke_f1): BinaryF1Score()
  (fire_acc): BinaryAccuracy()
  (fire_pre): BinaryPrecision()
  (fire_rec): BinaryRecall()
  (fire_f1): BinaryF1Score()
  (model): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (2): ReLU()
    (3): Dropout2d(p=0.3, inplace=False)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): Conv2d(64, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (6): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (7): ReLU()
    (8): Dropout2d(p=0.3, inplace=False)
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(24, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (12): ReLU()
    (13): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (14): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (15): ReLU()
    (16): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (17): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (18): ReLU()
    (19): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (20): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (21): ReLU()
    (22): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (23): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (24): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (25): ReLU()
    (26): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (27): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (28): ReLU()
    (29): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (30): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (31): ReLU()
    (32): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (34): ReLU()
    (35): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (36): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (37): ReLU()
    (38): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    (40): ReLU()
  )
  (pool): AdaptiveAvgPool2d(output_size=(1, 1))
  (smoke): Sequential(
    (0): Dropout(p=0.2, inplace=False)
    (1): Linear(in_features=64, out_features=16, bias=True)
    (2): ReLU()
    (3): Linear(in_features=16, out_features=1, bias=True)
  )
  (fire): Sequential(
    (0): Dropout(p=0.2, inplace=False)
    (1): Linear(in_features=64, out_features=16, bias=True)
    (2): ReLU()
    (3): Linear(in_features=16, out_features=1, bias=True)
  )
)

Trainable parameters = 103554
Total parameters = 103554


TRAIN DFIRE dataset
Train dataset len: 17221

TEST DFire dataset
Test dataset len: 4306
Starting script


BED Classifier XS Tiny.
	One Head.
	Adding best mean F1 save.
	256 Normalization.
	Weighted for Precision.
	Modules.
	Losses and Metrics Loggers.
	SVD Compression Ratio  = 0.7
	10 epochs.


TRAIN DFIRE dataset
Train dataset len: 17221

TEST DFire dataset
Test dataset len: 4306

Using BED Classifier

Trainable parameters = 92786
Total parameters = 92786

Model shape is tensor([[-0.0366, -0.1040],
        [-0.0387, -0.1056],
        [-0.0417, -0.1071],
        [-0.0371, -0.1071]], device='cuda:0', grad_fn=<AddmmBackward0>)
BED Model Arquitecture
FUSED_BED_CLASSIFIER(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (dropout1): Dropout2d(p=0.3, inplace=False)
    (maxpool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu2): ReLU()
    (dropout2): Dropout2d(p=0.3, inplace=False)
    (maxpool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv31): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
    (relu31): ReLU()
    (conv32): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu32): ReLU()
    (conv33): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu33): ReLU()
    (conv34): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu34): ReLU()
    (maxpool4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv41): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu41): ReLU()
    (conv42): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu42): ReLU()
    (conv43): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu43): ReLU()
    (conv44): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu44): ReLU()
    (conv45): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu45): ReLU()
    (conv46): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu46): ReLU()
    (avgpool5): AdaptiveAvgPool2d(output_size=(1, 1))
    (flatten5): Flatten(start_dim=1, end_dim=-1)
    (dropout5): Dropout(p=0.2, inplace=False)
    (linear51): Linear(in_features=64, out_features=16, bias=True)
    (relu5): ReLU()
    (linear52): Linear(in_features=16, out_features=2, bias=True)
  )
)
Loading Model. Trained during 127 epochs
Original FP32 Model Summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
FUSED_BED_CLASSIFIER                     [64, 2]                   --
├─Sequential: 1-1                        [64, 2]                   --
│    └─Conv2d: 2-1                       [64, 32, 224, 224]        896
│    └─ReLU: 2-2                         [64, 32, 224, 224]        --
│    └─Dropout2d: 2-3                    [64, 32, 224, 224]        --
│    └─MaxPool2d: 2-4                    [64, 32, 112, 112]        --
│    └─Conv2d: 2-5                       [64, 16, 112, 112]        4,624
│    └─ReLU: 2-6                         [64, 16, 112, 112]        --
│    └─Dropout2d: 2-7                    [64, 16, 112, 112]        --
│    └─MaxPool2d: 2-8                    [64, 16, 56, 56]          --
│    └─Conv2d: 2-9                       [64, 16, 56, 56]          272
│    └─ReLU: 2-10                        [64, 16, 56, 56]          --
│    └─Conv2d: 2-11                      [64, 32, 56, 56]          4,640
│    └─ReLU: 2-12                        [64, 32, 56, 56]          --
│    └─Conv2d: 2-13                      [64, 32, 56, 56]          1,056
│    └─ReLU: 2-14                        [64, 32, 56, 56]          --
│    └─Conv2d: 2-15                      [64, 64, 56, 56]          18,496
│    └─ReLU: 2-16                        [64, 64, 56, 56]          --
│    └─MaxPool2d: 2-17                   [64, 64, 28, 28]          --
│    └─Conv2d: 2-18                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-19                        [64, 32, 28, 28]          --
│    └─Conv2d: 2-20                      [64, 64, 28, 28]          18,496
│    └─ReLU: 2-21                        [64, 64, 28, 28]          --
│    └─Conv2d: 2-22                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-23                        [64, 32, 28, 28]          --
│    └─Conv2d: 2-24                      [64, 64, 28, 28]          18,496
│    └─ReLU: 2-25                        [64, 64, 28, 28]          --
│    └─Conv2d: 2-26                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-27                        [64, 32, 28, 28]          --
│    └─Conv2d: 2-28                      [64, 64, 28, 28]          18,496
│    └─ReLU: 2-29                        [64, 64, 28, 28]          --
│    └─AdaptiveAvgPool2d: 2-30           [64, 64, 1, 1]            --
│    └─Flatten: 2-31                     [64, 64]                  --
│    └─Dropout: 2-32                     [64, 64]                  --
│    └─Linear: 2-33                      [64, 16]                  1,040
│    └─ReLU: 2-34                        [64, 16]                  --
│    └─Linear: 2-35                      [64, 2]                   34
==========================================================================================
Total params: 92,786
Trainable params: 92,786
Non-trainable params: 0
Total mult-adds (G): 14.60
==========================================================================================
Input size (MB): 38.54
Forward/backward pass size (MB): 1271.67
Params size (MB): 0.37
Estimated Total Size (MB): 1310.58
==========================================================================================
FUSED_BED_CLASSIFIER(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (dropout1): Dropout2d(p=0.3, inplace=False)
    (maxpool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Sequential(
      (0): Conv2d(32, 9, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(9, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
    )
    (relu2): ReLU()
    (dropout2): Dropout2d(p=0.3, inplace=False)
    (maxpool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv31): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
    (relu31): ReLU()
    (conv32): Sequential(
      (0): Conv2d(16, 28, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(28, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
    )
    (relu32): ReLU()
    (conv33): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu33): ReLU()
    (conv34): Sequential(
      (0): Conv2d(32, 51, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(51, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
    )
    (relu34): ReLU()
    (maxpool4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv41): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu41): ReLU()
    (conv42): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu42): ReLU()
    (conv43): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu43): ReLU()
    (conv44): Sequential(
      (0): Conv2d(32, 57, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(57, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
    )
    (relu44): ReLU()
    (conv45): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    (relu45): ReLU()
    (conv46): Sequential(
      (0): Conv2d(32, 12, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(12, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
    )
    (relu46): ReLU()
    (avgpool5): AdaptiveAvgPool2d(output_size=(1, 1))
    (flatten5): Flatten(start_dim=1, end_dim=-1)
    (dropout5): Dropout(p=0.2, inplace=False)
    (linear51): Linear(in_features=64, out_features=16, bias=True)
    (relu5): ReLU()
    (linear52): Linear(in_features=16, out_features=2, bias=True)
  )
)
**********************************************************************************************
Compressed Model Statistics
Baseline model accuracy: 0.918301, Compressed model accuracy: 0.918194
Compression ratio for memory=0.733183, mac=0.696732

**********************************************************************************************

Per-layer Stats
    Name:model.conv1, compression-ratio: None
    Name:model.conv2, compression-ratio: 0.3
    Name:model.conv31, compression-ratio: None
    Name:model.conv32, compression-ratio: 0.9
    Name:model.conv33, compression-ratio: None
    Name:model.conv34, compression-ratio: 0.8
    Name:model.conv41, compression-ratio: None
    Name:model.conv42, compression-ratio: None
    Name:model.conv43, compression-ratio: None
    Name:model.conv44, compression-ratio: 0.9
    Name:model.conv45, compression-ratio: None
    Name:model.conv46, compression-ratio: 0.2

**********************************************************************************************

Greedy Eval Dict
    Layer: model.conv1
        Ratio=0.1, Eval score=0.42037224769592285
        Ratio=0.2, Eval score=0.42037224769592285
        Ratio=0.3, Eval score=0.541448712348938
        Ratio=0.4, Eval score=0.6563265323638916
        Ratio=0.5, Eval score=0.7006731629371643
        Ratio=0.6, Eval score=0.7006731629371643
        Ratio=0.7, Eval score=0.7902776002883911
        Ratio=0.8, Eval score=0.7717182636260986
        Ratio=0.9, Eval score=0.8955165147781372
    Layer: model.conv2
        Ratio=0.1, Eval score=0.8732291460037231
        Ratio=0.2, Eval score=0.9154307246208191
        Ratio=0.3, Eval score=0.9181004762649536
        Ratio=0.4, Eval score=0.9188838005065918
        Ratio=0.5, Eval score=0.9182742834091187
        Ratio=0.6, Eval score=0.918020486831665
        Ratio=0.7, Eval score=0.9182016849517822
        Ratio=0.8, Eval score=0.917804479598999
        Ratio=0.9, Eval score=0.9182302951812744
    Layer: model.conv31
        Ratio=0.1, Eval score=0.6631410121917725
        Ratio=0.2, Eval score=0.6631410121917725
        Ratio=0.3, Eval score=0.6640874147415161
        Ratio=0.4, Eval score=0.6894649267196655
        Ratio=0.5, Eval score=0.711021900177002
        Ratio=0.6, Eval score=0.711021900177002
        Ratio=0.7, Eval score=0.7604839205741882
        Ratio=0.8, Eval score=0.9064376950263977
        Ratio=0.9, Eval score=0.9155129194259644
    Layer: model.conv32
        Ratio=0.1, Eval score=0.3298644423484802
        Ratio=0.2, Eval score=0.8534783720970154
        Ratio=0.3, Eval score=0.8725892305374146
        Ratio=0.4, Eval score=0.9103875160217285
        Ratio=0.5, Eval score=0.916754961013794
        Ratio=0.6, Eval score=0.9189096689224243
        Ratio=0.7, Eval score=0.9164205193519592
        Ratio=0.8, Eval score=0.9142780303955078
        Ratio=0.9, Eval score=0.9182186126708984
    Layer: model.conv33
        Ratio=0.1, Eval score=0.0
        Ratio=0.2, Eval score=0.329427033662796
        Ratio=0.3, Eval score=0.48856067657470703
        Ratio=0.4, Eval score=0.555859386920929
        Ratio=0.5, Eval score=0.8905003070831299
        Ratio=0.6, Eval score=0.8939006924629211
        Ratio=0.7, Eval score=0.8998987674713135
        Ratio=0.8, Eval score=0.897074282169342
        Ratio=0.9, Eval score=0.9095099568367004
    Layer: model.conv34
        Ratio=0.1, Eval score=0.38335299491882324
        Ratio=0.2, Eval score=0.8057821989059448
        Ratio=0.3, Eval score=0.8896081447601318
        Ratio=0.4, Eval score=0.9107231497764587
        Ratio=0.5, Eval score=0.9165257811546326
        Ratio=0.6, Eval score=0.917168140411377
        Ratio=0.7, Eval score=0.9170185327529907
        Ratio=0.8, Eval score=0.9172713756561279
        Ratio=0.9, Eval score=0.9175316095352173
    Layer: model.conv41
        Ratio=0.1, Eval score=0.16441842913627625
        Ratio=0.2, Eval score=0.11000515520572662
        Ratio=0.3, Eval score=0.46341899037361145
        Ratio=0.4, Eval score=0.5490826964378357
        Ratio=0.5, Eval score=0.6785107851028442
        Ratio=0.6, Eval score=0.857725977897644
        Ratio=0.7, Eval score=0.8772263526916504
        Ratio=0.8, Eval score=0.9002950191497803
        Ratio=0.9, Eval score=0.9060708284378052
    Layer: model.conv42
        Ratio=0.1, Eval score=0.6451557278633118
        Ratio=0.2, Eval score=0.7673542499542236
        Ratio=0.3, Eval score=0.8900686502456665
        Ratio=0.4, Eval score=0.8992695808410645
        Ratio=0.5, Eval score=0.9110495448112488
        Ratio=0.6, Eval score=0.9138132333755493
        Ratio=0.7, Eval score=0.9116190075874329
        Ratio=0.8, Eval score=0.9146155118942261
        Ratio=0.9, Eval score=0.9151328206062317
    Layer: model.conv43
        Ratio=0.1, Eval score=0.5532364845275879
        Ratio=0.2, Eval score=0.5684179663658142
        Ratio=0.3, Eval score=0.7237783670425415
        Ratio=0.4, Eval score=0.742671549320221
        Ratio=0.5, Eval score=0.815938413143158
        Ratio=0.6, Eval score=0.8260228633880615
        Ratio=0.7, Eval score=0.8706831932067871
        Ratio=0.8, Eval score=0.8982851505279541
        Ratio=0.9, Eval score=0.9035235643386841
    Layer: model.conv44
        Ratio=0.1, Eval score=0.3015594482421875
        Ratio=0.2, Eval score=0.4377521872520447
        Ratio=0.3, Eval score=0.6756185293197632
        Ratio=0.4, Eval score=0.835300087928772
        Ratio=0.5, Eval score=0.8989076018333435
        Ratio=0.6, Eval score=0.9130574464797974
        Ratio=0.7, Eval score=0.9131832122802734
        Ratio=0.8, Eval score=0.9124635457992554
        Ratio=0.9, Eval score=0.9173382520675659
    Layer: model.conv45
        Ratio=0.1, Eval score=0.7465232610702515
        Ratio=0.2, Eval score=0.6858437061309814
        Ratio=0.3, Eval score=0.7084293365478516
        Ratio=0.4, Eval score=0.6926824450492859
        Ratio=0.5, Eval score=0.6988785266876221
        Ratio=0.6, Eval score=0.718466579914093
        Ratio=0.7, Eval score=0.8731621503829956
        Ratio=0.8, Eval score=0.9171379208564758
        Ratio=0.9, Eval score=0.9125218391418457
    Layer: model.conv46
        Ratio=0.1, Eval score=0.9130189418792725
        Ratio=0.2, Eval score=0.9179718494415283
        Ratio=0.3, Eval score=0.9184343814849854
        Ratio=0.4, Eval score=0.9179422855377197
        Ratio=0.5, Eval score=0.9181022644042969
        Ratio=0.6, Eval score=0.9183235764503479
        Ratio=0.7, Eval score=0.9184343814849854
        Ratio=0.8, Eval score=0.9183235764503479
        Ratio=0.9, Eval score=0.918190598487854

**********************************************************************************************

Compressed Model Summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
FUSED_BED_CLASSIFIER                     [64, 2]                   --
├─Sequential: 1-1                        [64, 2]                   --
│    └─Conv2d: 2-1                       [64, 32, 224, 224]        896
│    └─ReLU: 2-2                         [64, 32, 224, 224]        --
│    └─Dropout2d: 2-3                    [64, 32, 224, 224]        --
│    └─MaxPool2d: 2-4                    [64, 32, 112, 112]        --
│    └─Sequential: 2-5                   [64, 16, 112, 112]        --
│    │    └─Conv2d: 3-1                  [64, 9, 112, 112]         864
│    │    └─Conv2d: 3-2                  [64, 16, 112, 112]        448
│    └─ReLU: 2-6                         [64, 16, 112, 112]        --
│    └─Dropout2d: 2-7                    [64, 16, 112, 112]        --
│    └─MaxPool2d: 2-8                    [64, 16, 56, 56]          --
│    └─Conv2d: 2-9                       [64, 16, 56, 56]          272
│    └─ReLU: 2-10                        [64, 16, 56, 56]          --
│    └─Sequential: 2-11                  [64, 32, 56, 56]          --
│    │    └─Conv2d: 3-3                  [64, 28, 56, 56]          1,344
│    │    └─Conv2d: 3-4                  [64, 32, 56, 56]          2,720
│    └─ReLU: 2-12                        [64, 32, 56, 56]          --
│    └─Conv2d: 2-13                      [64, 32, 56, 56]          1,056
│    └─ReLU: 2-14                        [64, 32, 56, 56]          --
│    └─Sequential: 2-15                  [64, 64, 56, 56]          --
│    │    └─Conv2d: 3-5                  [64, 51, 56, 56]          4,896
│    │    └─Conv2d: 3-6                  [64, 64, 56, 56]          9,856
│    └─ReLU: 2-16                        [64, 64, 56, 56]          --
│    └─MaxPool2d: 2-17                   [64, 64, 28, 28]          --
│    └─Conv2d: 2-18                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-19                        [64, 32, 28, 28]          --
│    └─Conv2d: 2-20                      [64, 64, 28, 28]          18,496
│    └─ReLU: 2-21                        [64, 64, 28, 28]          --
│    └─Conv2d: 2-22                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-23                        [64, 32, 28, 28]          --
│    └─Sequential: 2-24                  [64, 64, 28, 28]          --
│    │    └─Conv2d: 3-7                  [64, 57, 28, 28]          5,472
│    │    └─Conv2d: 3-8                  [64, 64, 28, 28]          11,008
│    └─ReLU: 2-25                        [64, 64, 28, 28]          --
│    └─Conv2d: 2-26                      [64, 32, 28, 28]          2,080
│    └─ReLU: 2-27                        [64, 32, 28, 28]          --
│    └─Sequential: 2-28                  [64, 64, 28, 28]          --
│    │    └─Conv2d: 3-9                  [64, 12, 28, 28]          1,152
│    │    └─Conv2d: 3-10                 [64, 64, 28, 28]          2,368
│    └─ReLU: 2-29                        [64, 64, 28, 28]          --
│    └─AdaptiveAvgPool2d: 2-30           [64, 64, 1, 1]            --
│    └─Flatten: 2-31                     [64, 64]                  --
│    └─Dropout: 2-32                     [64, 64]                  --
│    └─Linear: 2-33                      [64, 16]                  1,040
│    └─ReLU: 2-34                        [64, 16]                  --
│    └─Linear: 2-35                      [64, 2]                   34
==========================================================================================
Total params: 68,162
Trainable params: 68,162
Non-trainable params: 0
Total mult-adds (G): 10.22
==========================================================================================
Input size (MB): 38.54
Forward/backward pass size (MB): 1484.01
Params size (MB): 0.27
Estimated Total Size (MB): 1522.82
==========================================================================================

Loss Function: BCE
Smoke Precision Weight: 0.8

Device: cuda
Learning Rate: 0.0001
Weight Decay: 0.0001
Scheduler factor: 0.8
Scheduler patience: 2
Scheduler threshold: 0.001
Scheduler min learning rate: 1e-06
Batch Size: 64
W: 224
H: 224
Batch Size: 64
W: 224
H: 224
Start Training


***Start Training: 07:47:11


=== EPOCH 0/9 ===
Learning Rate = 0.0001

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8791   |0.8865   |0.8640   |0.8751   |
23.45      |16.05     |7.40      |    Fire   |0.9572   |0.9260   |0.9167   |0.9213   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9081   |0.9121   |0.8953   |0.9036   |
20.92      |13.85     |7.07      |    Fire   |0.9641   |0.9570   |0.9018   |0.9286   |

Saving model with new best validation loss: 20.921
Saving model with new best smoke precision: 0.912
Saving model with best Mean F1: 0.9161

=== EPOCH 1/9 ===
Learning Rate = 0.0001

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8813   |0.8870   |0.8685   |0.8777   |
23.31      |16.10     |7.21      |    Fire   |0.9572   |0.9271   |0.9157   |0.9213   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9051   |0.9161   |0.8837   |0.8996   |
20.84      |13.89     |6.95      |    Fire   |0.9636   |0.9450   |0.9126   |0.9285   |

Saving model with new best validation loss: 20.844

=== EPOCH 2/9 ===
Learning Rate = 0.0001

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8853   |0.8927   |0.8706   |0.8815   |
22.66      |15.63     |7.04      |    Fire   |0.9589   |0.9325   |0.9161   |0.9242   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9060   |0.8846   |0.9254   |0.9045   |
22.06      |14.24     |7.83      |    Fire   |0.9622   |0.9721   |0.8793   |0.9234   |


=== EPOCH 3/9 ===
Learning Rate = 0.0001

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8808   |0.8879   |0.8663   |0.8770   |
23.25      |15.96     |7.30      |    Fire   |0.9585   |0.9289   |0.9186   |0.9237   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9051   |0.9165   |0.8832   |0.8995   |
21.70      |14.22     |7.47      |    Fire   |0.9632   |0.9568   |0.8982   |0.9266   |


=== EPOCH 4/9 ===
Learning Rate = 0.0001

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8839   |0.8899   |0.8710   |0.8803   |
22.83      |15.71     |7.12      |    Fire   |0.9607   |0.9335   |0.9218   |0.9276   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9062   |0.9222   |0.8793   |0.9002   |
21.68      |14.21     |7.47      |    Fire   |0.9615   |0.9610   |0.8874   |0.9227   |

Saving model with new best smoke precision: 0.922

=== EPOCH 5/9 ===
Learning Rate = 8e-05

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8855   |0.8954   |0.8679   |0.8814   |
22.84      |15.56     |7.28      |    Fire   |0.9588   |0.9278   |0.9209   |0.9244   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9135   |0.9048   |0.9166   |0.9107   |
21.04      |13.74     |7.30      |    Fire   |0.9613   |0.9583   |0.8892   |0.9224   |

Saving model with precision > 0.9 and recall > 0.9
Saving model with best Mean F1: 0.9165

=== EPOCH 6/9 ===
Learning Rate = 8e-05

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8844   |0.8904   |0.8716   |0.8809   |
22.61      |15.68     |6.93      |    Fire   |0.9586   |0.9283   |0.9196   |0.9240   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9014   |0.9059   |0.8871   |0.8964   |
22.00      |14.52     |7.48      |    Fire   |0.9625   |0.9523   |0.9000   |0.9254   |


=== EPOCH 7/9 ===
Learning Rate = 8e-05

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8872   |0.8936   |0.8739   |0.8837   |
22.58      |15.56     |7.02      |    Fire   |0.9599   |0.9342   |0.9179   |0.9260   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9076   |0.9153   |0.8905   |0.9027   |
20.96      |13.82     |7.14      |    Fire   |0.9606   |0.9297   |0.9171   |0.9234   |


=== EPOCH 8/9 ===
Learning Rate = 6.400000000000001e-05

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8875   |0.8923   |0.8765   |0.8843   |
22.14      |15.18     |6.96      |    Fire   |0.9614   |0.9322   |0.9260   |0.9291   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9074   |0.9099   |0.8963   |0.9031   |
21.34      |14.08     |7.25      |    Fire   |0.9608   |0.9274   |0.9207   |0.9241   |


=== EPOCH 9/9 ===
Learning Rate = 6.400000000000001e-05

TRAIN Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.8848   |0.8929   |0.8693   |0.8810   |
22.40      |15.42     |6.99      |    Fire   |0.9591   |0.9311   |0.9184   |0.9247   |

VAL Stats
Total Loss |Smoke Loss|Fire Loss |    _______|Accuracy |Precision|Recall   |F1       |
-----------|----------|----------|    Smoke  |0.9086   |0.8824   |0.9346   |0.9077   |
21.17      |14.24     |6.93      |    Fire   |0.9632   |0.9375   |0.9189   |0.9281   |

Saving model with best Mean F1: 0.9179
Saving last model

***Script finished: 07:51:40

Time elapsed: 0:04:29.621134

Trainable parameters = 68162
Total parameters = 68162


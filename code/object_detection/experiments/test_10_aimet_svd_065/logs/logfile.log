BED Detector.
	DFire and FASDD UAV and CV.
	FASDD: train and val datasets to train, and test dataset to validate.
	FASDD RS not included, as it only has smoke and it is too different to current pictures
	SVD Compression Ratio  = 0.65


Load Model: True
	Model: ./experiments/test_03_dfire_&_fasdd_uav_cv_+epochs_maxobj10/weights/BED_detector__best_mAP=0.6224__epoch=119.pt

Device: cuda
Optimizer:
	Learning Rate: 0.0005
	Gradients Clip Norm: 500
	Weight Decay: 0.0005
Scheduler:
	Scheduler factor: 0.8
	Scheduler patience: 3
	Scheduler threshold: 0.01
	Scheduler min learning rate: 1e-06

Batch Size: 64
Num Workers: 8
Pin Memory: True
Epochs: 10
IMG DIMS:
	Width: 224
	Height: 224

Grid, Bounding Boxes, Classes and Thresholds:
	Grid: 7
	Number of Bounding Boxes per Cell: 2
	Number of Classes: 2
	Maximum Number of Objects per Image: 10
	IOU Threshold: 0.5
	Score Threshold: 0.2


AIMET Configuration
	Use Previous Dic: False
	Spatial SVD Compression: 0.65
	Prunning Compression: 0.9

Loss Function: YOLOV1_LOSS
Lambda for L1 regularization: 0

Using BED Detector

Trainable parameters = 287276
Total parameters = 287276

Input shape is torch.Size([4, 3, 224, 224])
Model shape is torch.Size([4, 7, 7, 12])

BED Model Arquitecture
BED_DETECTOR(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU()
    (dropout1): Dropout2d(p=0.3, inplace=False)
    (maxpool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu2): ReLU()
    (dropout2): Dropout2d(p=0.3, inplace=False)
    (maxpool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv31): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn31): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu31): ReLU()
    (conv32): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn32): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu32): ReLU()
    (conv33): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu33): ReLU()
    (conv34): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn34): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu34): ReLU()
    (maxpool4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv41): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu41): ReLU()
    (conv42): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn42): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu42): ReLU()
    (conv43): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu43): ReLU()
    (conv44): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn44): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu44): ReLU()
    (conv45): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn45): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu45): ReLU()
    (conv46): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn46): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu46): ReLU()
    (maxpool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv51): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn51): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu51): ReLU()
    (conv52): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn52): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu52): ReLU()
    (conv53): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn53): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu53): ReLU()
    (conv54): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn54): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu54): ReLU()
    (conv55): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu55): ReLU()
    (conv56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn56): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu56): ReLU()
    (maxpool6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv61): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu61): ReLU()
    (conv62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn62): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu62): ReLU()
    (conv71): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn71): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu71): ReLU()
    (conv72): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn72): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu72): ReLU()
    (conv73): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn73): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu73): ReLU()
    (conv74): Conv2d(16, 12, kernel_size=(1, 1), stride=(1, 1))
  )
)

Model Summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
BED_DETECTOR                             [1, 7, 7, 12]             --
├─Sequential: 1-1                        [1, 12, 7, 7]             --
│    └─Conv2d: 2-1                       [1, 32, 224, 224]         864
│    └─BatchNorm2d: 2-2                  [1, 32, 224, 224]         64
│    └─ReLU: 2-3                         [1, 32, 224, 224]         --
│    └─Dropout2d: 2-4                    [1, 32, 224, 224]         --
│    └─MaxPool2d: 2-5                    [1, 32, 112, 112]         --
│    └─Conv2d: 2-6                       [1, 16, 112, 112]         4,608
│    └─BatchNorm2d: 2-7                  [1, 16, 112, 112]         32
│    └─ReLU: 2-8                         [1, 16, 112, 112]         --
│    └─Dropout2d: 2-9                    [1, 16, 112, 112]         --
│    └─MaxPool2d: 2-10                   [1, 16, 56, 56]           --
│    └─Conv2d: 2-11                      [1, 16, 56, 56]           256
│    └─BatchNorm2d: 2-12                 [1, 16, 56, 56]           32
│    └─ReLU: 2-13                        [1, 16, 56, 56]           --
│    └─Conv2d: 2-14                      [1, 32, 56, 56]           4,608
│    └─BatchNorm2d: 2-15                 [1, 32, 56, 56]           64
│    └─ReLU: 2-16                        [1, 32, 56, 56]           --
│    └─Conv2d: 2-17                      [1, 32, 56, 56]           1,024
│    └─BatchNorm2d: 2-18                 [1, 32, 56, 56]           64
│    └─ReLU: 2-19                        [1, 32, 56, 56]           --
│    └─Conv2d: 2-20                      [1, 64, 56, 56]           18,432
│    └─BatchNorm2d: 2-21                 [1, 64, 56, 56]           128
│    └─ReLU: 2-22                        [1, 64, 56, 56]           --
│    └─MaxPool2d: 2-23                   [1, 64, 28, 28]           --
│    └─Conv2d: 2-24                      [1, 32, 28, 28]           2,048
│    └─BatchNorm2d: 2-25                 [1, 32, 28, 28]           64
│    └─ReLU: 2-26                        [1, 32, 28, 28]           --
│    └─Conv2d: 2-27                      [1, 64, 28, 28]           18,432
│    └─BatchNorm2d: 2-28                 [1, 64, 28, 28]           128
│    └─ReLU: 2-29                        [1, 64, 28, 28]           --
│    └─Conv2d: 2-30                      [1, 32, 28, 28]           2,048
│    └─BatchNorm2d: 2-31                 [1, 32, 28, 28]           64
│    └─ReLU: 2-32                        [1, 32, 28, 28]           --
│    └─Conv2d: 2-33                      [1, 64, 28, 28]           18,432
│    └─BatchNorm2d: 2-34                 [1, 64, 28, 28]           128
│    └─ReLU: 2-35                        [1, 64, 28, 28]           --
│    └─Conv2d: 2-36                      [1, 32, 28, 28]           2,048
│    └─BatchNorm2d: 2-37                 [1, 32, 28, 28]           64
│    └─ReLU: 2-38                        [1, 32, 28, 28]           --
│    └─Conv2d: 2-39                      [1, 64, 28, 28]           18,432
│    └─BatchNorm2d: 2-40                 [1, 64, 28, 28]           128
│    └─ReLU: 2-41                        [1, 64, 28, 28]           --
│    └─MaxPool2d: 2-42                   [1, 64, 14, 14]           --
│    └─Conv2d: 2-43                      [1, 32, 14, 14]           2,048
│    └─BatchNorm2d: 2-44                 [1, 32, 14, 14]           64
│    └─ReLU: 2-45                        [1, 32, 14, 14]           --
│    └─Conv2d: 2-46                      [1, 64, 14, 14]           18,432
│    └─BatchNorm2d: 2-47                 [1, 64, 14, 14]           128
│    └─ReLU: 2-48                        [1, 64, 14, 14]           --
│    └─Conv2d: 2-49                      [1, 32, 14, 14]           2,048
│    └─BatchNorm2d: 2-50                 [1, 32, 14, 14]           64
│    └─ReLU: 2-51                        [1, 32, 14, 14]           --
│    └─Conv2d: 2-52                      [1, 64, 14, 14]           18,432
│    └─BatchNorm2d: 2-53                 [1, 64, 14, 14]           128
│    └─ReLU: 2-54                        [1, 64, 14, 14]           --
│    └─Conv2d: 2-55                      [1, 64, 14, 14]           36,864
│    └─BatchNorm2d: 2-56                 [1, 64, 14, 14]           128
│    └─ReLU: 2-57                        [1, 64, 14, 14]           --
│    └─Conv2d: 2-58                      [1, 64, 14, 14]           36,864
│    └─BatchNorm2d: 2-59                 [1, 64, 14, 14]           128
│    └─ReLU: 2-60                        [1, 64, 14, 14]           --
│    └─MaxPool2d: 2-61                   [1, 64, 7, 7]             --
│    └─Conv2d: 2-62                      [1, 64, 7, 7]             36,864
│    └─BatchNorm2d: 2-63                 [1, 64, 7, 7]             128
│    └─ReLU: 2-64                        [1, 64, 7, 7]             --
│    └─Conv2d: 2-65                      [1, 64, 7, 7]             36,864
│    └─BatchNorm2d: 2-66                 [1, 64, 7, 7]             128
│    └─ReLU: 2-67                        [1, 64, 7, 7]             --
│    └─Conv2d: 2-68                      [1, 64, 7, 7]             4,096
│    └─BatchNorm2d: 2-69                 [1, 64, 7, 7]             128
│    └─ReLU: 2-70                        [1, 64, 7, 7]             --
│    └─Conv2d: 2-71                      [1, 16, 7, 7]             1,024
│    └─BatchNorm2d: 2-72                 [1, 16, 7, 7]             32
│    └─ReLU: 2-73                        [1, 16, 7, 7]             --
│    └─Conv2d: 2-74                      [1, 16, 7, 7]             256
│    └─BatchNorm2d: 2-75                 [1, 16, 7, 7]             32
│    └─ReLU: 2-76                        [1, 16, 7, 7]             --
│    └─Conv2d: 2-77                      [1, 12, 7, 7]             204
==========================================================================================
Total params: 287,276
Trainable params: 287,276
Non-trainable params: 0
Total mult-adds (M): 251.96
==========================================================================================
Input size (MB): 0.60
Forward/backward pass size (MB): 40.92
Params size (MB): 1.15
Estimated Total Size (MB): 42.67
==========================================================================================
Loading Model. Trained during 119 epochs
Baseline mAP: 0.6224009394645691
BED_DETECTOR(
  (model): Sequential(
    (conv1): Sequential(
      (0): Conv2d(3, 4, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(4, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU()
    (dropout1): Dropout2d(p=0.3, inplace=False)
    (maxpool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Sequential(
      (0): Conv2d(32, 3, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(3, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu2): ReLU()
    (dropout2): Dropout2d(p=0.3, inplace=False)
    (maxpool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv31): Sequential(
      (0): Conv2d(16, 2, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(2, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn31): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu31): ReLU()
    (conv32): Sequential(
      (0): Conv2d(16, 22, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(22, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn32): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu32): ReLU()
    (conv33): Sequential(
      (0): Conv2d(32, 11, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(11, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu33): ReLU()
    (conv34): Sequential(
      (0): Conv2d(32, 25, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(25, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn34): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu34): ReLU()
    (maxpool4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv41): Sequential(
      (0): Conv2d(64, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(17, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu41): ReLU()
    (conv42): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(32, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn42): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu42): ReLU()
    (conv43): Sequential(
      (0): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(19, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu43): ReLU()
    (conv44): Sequential(
      (0): Conv2d(32, 25, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(25, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn44): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu44): ReLU()
    (conv45): Sequential(
      (0): Conv2d(64, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(17, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn45): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu45): ReLU()
    (conv46): Sequential(
      (0): Conv2d(32, 25, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(25, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn46): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu46): ReLU()
    (maxpool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv51): Sequential(
      (0): Conv2d(64, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(17, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn51): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu51): ReLU()
    (conv52): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(32, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn52): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu52): ReLU()
    (conv53): Sequential(
      (0): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): Conv2d(19, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn53): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu53): ReLU()
    (conv54): Sequential(
      (0): Conv2d(32, 38, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(38, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn54): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu54): ReLU()
    (conv55): Sequential(
      (0): Conv2d(64, 57, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(57, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu55): ReLU()
    (conv56): Sequential(
      (0): Conv2d(64, 76, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(76, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn56): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu56): ReLU()
    (maxpool6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv61): Sequential(
      (0): Conv2d(64, 76, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(76, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu61): ReLU()
    (conv62): Sequential(
      (0): Conv2d(64, 86, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
      (1): Conv2d(86, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
    )
    (bn62): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu62): ReLU()
    (conv71): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn71): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu71): ReLU()
    (conv72): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn72): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu72): ReLU()
    (conv73): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn73): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu73): ReLU()
    (conv74): Conv2d(16, 12, kernel_size=(1, 1), stride=(1, 1))
  )
)
**********************************************************************************************
Compressed Model Statistics
Baseline model accuracy: 0.622401, Compressed model accuracy: 0.304775
Compression ratio for memory=0.642166, mac=0.404354

**********************************************************************************************

Per-layer Stats
    Name:model.conv1, compression-ratio: 0.5
    Name:model.conv2, compression-ratio: 0.1
    Name:model.conv31, compression-ratio: 0.3
    Name:model.conv32, compression-ratio: 0.7
    Name:model.conv33, compression-ratio: 0.7
    Name:model.conv34, compression-ratio: 0.4
    Name:model.conv41, compression-ratio: 0.8
    Name:model.conv42, compression-ratio: 0.5
    Name:model.conv43, compression-ratio: 0.9
    Name:model.conv44, compression-ratio: 0.4
    Name:model.conv45, compression-ratio: 0.8
    Name:model.conv46, compression-ratio: 0.4
    Name:model.conv51, compression-ratio: 0.8
    Name:model.conv52, compression-ratio: 0.5
    Name:model.conv53, compression-ratio: 0.9
    Name:model.conv54, compression-ratio: 0.6
    Name:model.conv55, compression-ratio: 0.6
    Name:model.conv56, compression-ratio: 0.8
    Name:model.conv61, compression-ratio: 0.8
    Name:model.conv62, compression-ratio: 0.9
    Name:model.conv71, compression-ratio: None
    Name:model.conv72, compression-ratio: None
    Name:model.conv73, compression-ratio: None
    Name:model.conv74, compression-ratio: None

**********************************************************************************************

Greedy Eval Dict
    Layer: model.conv1
        Ratio=0.1, Eval score=0.3707604706287384
        Ratio=0.2, Eval score=0.3707604706287384
        Ratio=0.3, Eval score=0.3596137762069702
        Ratio=0.4, Eval score=0.5975776314735413
        Ratio=0.5, Eval score=0.6180806756019592
        Ratio=0.6, Eval score=0.6180806756019592
        Ratio=0.7, Eval score=0.6232311725616455
        Ratio=0.8, Eval score=0.622880756855011
        Ratio=0.9, Eval score=0.6216496825218201
    Layer: model.conv2
        Ratio=0.1, Eval score=0.6062171459197998
        Ratio=0.2, Eval score=0.6175607442855835
        Ratio=0.3, Eval score=0.6213721632957458
        Ratio=0.4, Eval score=0.6227458715438843
        Ratio=0.5, Eval score=0.6224604249000549
        Ratio=0.6, Eval score=0.6228073239326477
        Ratio=0.7, Eval score=0.6226633787155151
        Ratio=0.8, Eval score=0.6224937438964844
        Ratio=0.9, Eval score=0.6223227381706238
    Layer: model.conv31
        Ratio=0.1, Eval score=0.24989748001098633
        Ratio=0.2, Eval score=0.24989748001098633
        Ratio=0.3, Eval score=0.6069414019584656
        Ratio=0.4, Eval score=0.6215996146202087
        Ratio=0.5, Eval score=0.6222976446151733
        Ratio=0.6, Eval score=0.6222976446151733
        Ratio=0.7, Eval score=0.6219913959503174
        Ratio=0.8, Eval score=0.6215346455574036
        Ratio=0.9, Eval score=0.6219050884246826
    Layer: model.conv32
        Ratio=0.1, Eval score=0.3974613845348358
        Ratio=0.2, Eval score=0.41244786977767944
        Ratio=0.3, Eval score=0.3882559835910797
        Ratio=0.4, Eval score=0.5892689228057861
        Ratio=0.5, Eval score=0.5975835919380188
        Ratio=0.6, Eval score=0.6036126613616943
        Ratio=0.7, Eval score=0.6155478954315186
        Ratio=0.8, Eval score=0.6153468489646912
        Ratio=0.9, Eval score=0.6213741898536682
    Layer: model.conv33
        Ratio=0.1, Eval score=0.0
        Ratio=0.2, Eval score=0.03359663859009743
        Ratio=0.3, Eval score=0.2087007611989975
        Ratio=0.4, Eval score=0.47852852940559387
        Ratio=0.5, Eval score=0.5421379208564758
        Ratio=0.6, Eval score=0.5508782863616943
        Ratio=0.7, Eval score=0.6109869480133057
        Ratio=0.8, Eval score=0.6152776479721069
        Ratio=0.9, Eval score=0.6211921572685242
    Layer: model.conv34
        Ratio=0.1, Eval score=0.4199133813381195
        Ratio=0.2, Eval score=0.5774530172348022
        Ratio=0.3, Eval score=0.591053307056427
        Ratio=0.4, Eval score=0.6060380339622498
        Ratio=0.5, Eval score=0.6106809973716736
        Ratio=0.6, Eval score=0.6215120553970337
        Ratio=0.7, Eval score=0.6212180852890015
        Ratio=0.8, Eval score=0.6219040155410767
        Ratio=0.9, Eval score=0.6223328113555908
    Layer: model.conv41
        Ratio=0.1, Eval score=0.0
        Ratio=0.2, Eval score=0.009900989942252636
        Ratio=0.3, Eval score=0.05182446166872978
        Ratio=0.4, Eval score=0.4694077968597412
        Ratio=0.5, Eval score=0.5281581282615662
        Ratio=0.6, Eval score=0.583034873008728
        Ratio=0.7, Eval score=0.5876185297966003
        Ratio=0.8, Eval score=0.6078678965568542
        Ratio=0.9, Eval score=0.6112894415855408
    Layer: model.conv42
        Ratio=0.1, Eval score=0.2529114782810211
        Ratio=0.2, Eval score=0.35263270139694214
        Ratio=0.3, Eval score=0.5399851202964783
        Ratio=0.4, Eval score=0.5959228277206421
        Ratio=0.5, Eval score=0.615801990032196
        Ratio=0.6, Eval score=0.6213796138763428
        Ratio=0.7, Eval score=0.6217685341835022
        Ratio=0.8, Eval score=0.6222295165061951
        Ratio=0.9, Eval score=0.6223121285438538
    Layer: model.conv43
        Ratio=0.1, Eval score=0.022783633321523666
        Ratio=0.2, Eval score=0.17130255699157715
        Ratio=0.3, Eval score=0.3061552345752716
        Ratio=0.4, Eval score=0.3564296364784241
        Ratio=0.5, Eval score=0.5623577833175659
        Ratio=0.6, Eval score=0.5449405312538147
        Ratio=0.7, Eval score=0.5856329798698425
        Ratio=0.8, Eval score=0.5982393622398376
        Ratio=0.9, Eval score=0.6116381287574768
    Layer: model.conv44
        Ratio=0.1, Eval score=0.3629150688648224
        Ratio=0.2, Eval score=0.5142291188240051
        Ratio=0.3, Eval score=0.5862603187561035
        Ratio=0.4, Eval score=0.6076207756996155
        Ratio=0.5, Eval score=0.6151837706565857
        Ratio=0.6, Eval score=0.6202758550643921
        Ratio=0.7, Eval score=0.6211966276168823
        Ratio=0.8, Eval score=0.6183105707168579
        Ratio=0.9, Eval score=0.6187962889671326
    Layer: model.conv45
        Ratio=0.1, Eval score=0.03127199411392212
        Ratio=0.2, Eval score=0.07191964238882065
        Ratio=0.3, Eval score=0.22678227722644806
        Ratio=0.4, Eval score=0.3663005530834198
        Ratio=0.5, Eval score=0.4436614215373993
        Ratio=0.6, Eval score=0.5693954825401306
        Ratio=0.7, Eval score=0.5815911889076233
        Ratio=0.8, Eval score=0.6104732155799866
        Ratio=0.9, Eval score=0.6090104579925537
    Layer: model.conv46
        Ratio=0.1, Eval score=0.2992340326309204
        Ratio=0.2, Eval score=0.5633377432823181
        Ratio=0.3, Eval score=0.6000714898109436
        Ratio=0.4, Eval score=0.6052667498588562
        Ratio=0.5, Eval score=0.6142073273658752
        Ratio=0.6, Eval score=0.6169543862342834
        Ratio=0.7, Eval score=0.6203902363777161
        Ratio=0.8, Eval score=0.6208701729774475
        Ratio=0.9, Eval score=0.621737003326416
    Layer: model.conv51
        Ratio=0.1, Eval score=0.026106856763362885
        Ratio=0.2, Eval score=0.07168631255626678
        Ratio=0.3, Eval score=0.19348178803920746
        Ratio=0.4, Eval score=0.5049750208854675
        Ratio=0.5, Eval score=0.5671169757843018
        Ratio=0.6, Eval score=0.5836933255195618
        Ratio=0.7, Eval score=0.5959282517433167
        Ratio=0.8, Eval score=0.6116973757743835
        Ratio=0.9, Eval score=0.6133095026016235
    Layer: model.conv52
        Ratio=0.1, Eval score=0.23350811004638672
        Ratio=0.2, Eval score=0.49060434103012085
        Ratio=0.3, Eval score=0.5817626714706421
        Ratio=0.4, Eval score=0.5966153144836426
        Ratio=0.5, Eval score=0.6139136552810669
        Ratio=0.6, Eval score=0.6196320652961731
        Ratio=0.7, Eval score=0.6207879185676575
        Ratio=0.8, Eval score=0.6199508905410767
        Ratio=0.9, Eval score=0.6203773021697998
    Layer: model.conv53
        Ratio=0.1, Eval score=0.024106517434120178
        Ratio=0.2, Eval score=0.08451422303915024
        Ratio=0.3, Eval score=0.29601234197616577
        Ratio=0.4, Eval score=0.44422903656959534
        Ratio=0.5, Eval score=0.5233885049819946
        Ratio=0.6, Eval score=0.5610179901123047
        Ratio=0.7, Eval score=0.5862573981285095
        Ratio=0.8, Eval score=0.603339672088623
        Ratio=0.9, Eval score=0.610403299331665
    Layer: model.conv54
        Ratio=0.1, Eval score=0.17029984295368195
        Ratio=0.2, Eval score=0.43266382813453674
        Ratio=0.3, Eval score=0.547667920589447
        Ratio=0.4, Eval score=0.5840696096420288
        Ratio=0.5, Eval score=0.5982874035835266
        Ratio=0.6, Eval score=0.6053768992424011
        Ratio=0.7, Eval score=0.6103734374046326
        Ratio=0.8, Eval score=0.6137989163398743
        Ratio=0.9, Eval score=0.6152228713035583
    Layer: model.conv55
        Ratio=0.1, Eval score=0.11644793301820755
        Ratio=0.2, Eval score=0.48830893635749817
        Ratio=0.3, Eval score=0.5520132184028625
        Ratio=0.4, Eval score=0.5796533823013306
        Ratio=0.5, Eval score=0.5958461165428162
        Ratio=0.6, Eval score=0.604873538017273
        Ratio=0.7, Eval score=0.6159191727638245
        Ratio=0.8, Eval score=0.6166336536407471
        Ratio=0.9, Eval score=0.6179986000061035
    Layer: model.conv56
        Ratio=0.1, Eval score=0.20335015654563904
        Ratio=0.2, Eval score=0.4115667939186096
        Ratio=0.3, Eval score=0.5030319094657898
        Ratio=0.4, Eval score=0.5463420152664185
        Ratio=0.5, Eval score=0.5742344856262207
        Ratio=0.6, Eval score=0.592014729976654
        Ratio=0.7, Eval score=0.6027147173881531
        Ratio=0.8, Eval score=0.613185465335846
        Ratio=0.9, Eval score=0.6137608289718628
    Layer: model.conv61
        Ratio=0.1, Eval score=0.11238931119441986
        Ratio=0.2, Eval score=0.372650682926178
        Ratio=0.3, Eval score=0.4961058795452118
        Ratio=0.4, Eval score=0.5565601587295532
        Ratio=0.5, Eval score=0.5697174072265625
        Ratio=0.6, Eval score=0.5803787708282471
        Ratio=0.7, Eval score=0.5992342233657837
        Ratio=0.8, Eval score=0.6056780219078064
        Ratio=0.9, Eval score=0.6067662239074707
    Layer: model.conv62
        Ratio=0.1, Eval score=0.20627638697624207
        Ratio=0.2, Eval score=0.3824346363544464
        Ratio=0.3, Eval score=0.5266159176826477
        Ratio=0.4, Eval score=0.5678197741508484
        Ratio=0.5, Eval score=0.5845663547515869
        Ratio=0.6, Eval score=0.5919820070266724
        Ratio=0.7, Eval score=0.6010826230049133
        Ratio=0.8, Eval score=0.6041556596755981
        Ratio=0.9, Eval score=0.6092026829719543
    Layer: model.conv71
        Ratio=0.1, Eval score=0.09983666986227036
        Ratio=0.2, Eval score=0.12061972171068192
        Ratio=0.3, Eval score=0.19922569394111633
        Ratio=0.4, Eval score=0.2994655668735504
        Ratio=0.5, Eval score=0.43346795439720154
        Ratio=0.6, Eval score=0.4695022702217102
        Ratio=0.7, Eval score=0.5070899724960327
        Ratio=0.8, Eval score=0.5482380390167236
        Ratio=0.9, Eval score=0.5692657232284546
    Layer: model.conv72
        Ratio=0.1, Eval score=0.0
        Ratio=0.2, Eval score=0.0001332569372607395
        Ratio=0.3, Eval score=0.01613456755876541
        Ratio=0.4, Eval score=0.11862722039222717
        Ratio=0.5, Eval score=0.18029357492923737
        Ratio=0.6, Eval score=0.24612806737422943
        Ratio=0.7, Eval score=0.32171541452407837
        Ratio=0.8, Eval score=0.24544084072113037
        Ratio=0.9, Eval score=0.3061732053756714
    Layer: model.conv73
        Ratio=0.1, Eval score=0.0
        Ratio=0.2, Eval score=0.0
        Ratio=0.3, Eval score=4.760091542266309e-06
        Ratio=0.4, Eval score=0.0008987638866528869
        Ratio=0.5, Eval score=0.001191168325021863
        Ratio=0.6, Eval score=0.001191168325021863
        Ratio=0.7, Eval score=0.0016094055026769638
        Ratio=0.8, Eval score=0.003765076631680131
        Ratio=0.9, Eval score=0.01149542722851038
    Layer: model.conv74
        Ratio=0.1, Eval score=0.015644745901226997
        Ratio=0.2, Eval score=0.015644745901226997
        Ratio=0.3, Eval score=0.011413326486945152
        Ratio=0.4, Eval score=0.011413326486945152
        Ratio=0.5, Eval score=0.013271862640976906
        Ratio=0.6, Eval score=0.021549124270677567
        Ratio=0.7, Eval score=0.021549124270677567
        Ratio=0.8, Eval score=0.25170642137527466
        Ratio=0.9, Eval score=0.5487288236618042

**********************************************************************************************

Compressed Model Summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
BED_DETECTOR                             [1, 7, 7, 12]             --
├─Sequential: 1-1                        [1, 12, 7, 7]             --
│    └─Sequential: 2-1                   [1, 32, 224, 224]         --
│    │    └─Conv2d: 3-1                  [1, 4, 224, 224]          36
│    │    └─Conv2d: 3-2                  [1, 32, 224, 224]         384
│    └─BatchNorm2d: 2-2                  [1, 32, 224, 224]         64
│    └─ReLU: 2-3                         [1, 32, 224, 224]         --
│    └─Dropout2d: 2-4                    [1, 32, 224, 224]         --
│    └─MaxPool2d: 2-5                    [1, 32, 112, 112]         --
│    └─Sequential: 2-6                   [1, 16, 112, 112]         --
│    │    └─Conv2d: 3-3                  [1, 3, 112, 112]          288
│    │    └─Conv2d: 3-4                  [1, 16, 112, 112]         144
│    └─BatchNorm2d: 2-7                  [1, 16, 112, 112]         32
│    └─ReLU: 2-8                         [1, 16, 112, 112]         --
│    └─Dropout2d: 2-9                    [1, 16, 112, 112]         --
│    └─MaxPool2d: 2-10                   [1, 16, 56, 56]           --
│    └─Sequential: 2-11                  [1, 16, 56, 56]           --
│    │    └─Conv2d: 3-5                  [1, 2, 56, 56]            32
│    │    └─Conv2d: 3-6                  [1, 16, 56, 56]           32
│    └─BatchNorm2d: 2-12                 [1, 16, 56, 56]           32
│    └─ReLU: 2-13                        [1, 16, 56, 56]           --
│    └─Sequential: 2-14                  [1, 32, 56, 56]           --
│    │    └─Conv2d: 3-7                  [1, 22, 56, 56]           1,056
│    │    └─Conv2d: 3-8                  [1, 32, 56, 56]           2,112
│    └─BatchNorm2d: 2-15                 [1, 32, 56, 56]           64
│    └─ReLU: 2-16                        [1, 32, 56, 56]           --
│    └─Sequential: 2-17                  [1, 32, 56, 56]           --
│    │    └─Conv2d: 3-9                  [1, 11, 56, 56]           352
│    │    └─Conv2d: 3-10                 [1, 32, 56, 56]           352
│    └─BatchNorm2d: 2-18                 [1, 32, 56, 56]           64
│    └─ReLU: 2-19                        [1, 32, 56, 56]           --
│    └─Sequential: 2-20                  [1, 64, 56, 56]           --
│    │    └─Conv2d: 3-11                 [1, 25, 56, 56]           2,400
│    │    └─Conv2d: 3-12                 [1, 64, 56, 56]           4,800
│    └─BatchNorm2d: 2-21                 [1, 64, 56, 56]           128
│    └─ReLU: 2-22                        [1, 64, 56, 56]           --
│    └─MaxPool2d: 2-23                   [1, 64, 28, 28]           --
│    └─Sequential: 2-24                  [1, 32, 28, 28]           --
│    │    └─Conv2d: 3-13                 [1, 17, 28, 28]           1,088
│    │    └─Conv2d: 3-14                 [1, 32, 28, 28]           544
│    └─BatchNorm2d: 2-25                 [1, 32, 28, 28]           64
│    └─ReLU: 2-26                        [1, 32, 28, 28]           --
│    └─Sequential: 2-27                  [1, 64, 28, 28]           --
│    │    └─Conv2d: 3-15                 [1, 32, 28, 28]           3,072
│    │    └─Conv2d: 3-16                 [1, 64, 28, 28]           6,144
│    └─BatchNorm2d: 2-28                 [1, 64, 28, 28]           128
│    └─ReLU: 2-29                        [1, 64, 28, 28]           --
│    └─Sequential: 2-30                  [1, 32, 28, 28]           --
│    │    └─Conv2d: 3-17                 [1, 19, 28, 28]           1,216
│    │    └─Conv2d: 3-18                 [1, 32, 28, 28]           608
│    └─BatchNorm2d: 2-31                 [1, 32, 28, 28]           64
│    └─ReLU: 2-32                        [1, 32, 28, 28]           --
│    └─Sequential: 2-33                  [1, 64, 28, 28]           --
│    │    └─Conv2d: 3-19                 [1, 25, 28, 28]           2,400
│    │    └─Conv2d: 3-20                 [1, 64, 28, 28]           4,800
│    └─BatchNorm2d: 2-34                 [1, 64, 28, 28]           128
│    └─ReLU: 2-35                        [1, 64, 28, 28]           --
│    └─Sequential: 2-36                  [1, 32, 28, 28]           --
│    │    └─Conv2d: 3-21                 [1, 17, 28, 28]           1,088
│    │    └─Conv2d: 3-22                 [1, 32, 28, 28]           544
│    └─BatchNorm2d: 2-37                 [1, 32, 28, 28]           64
│    └─ReLU: 2-38                        [1, 32, 28, 28]           --
│    └─Sequential: 2-39                  [1, 64, 28, 28]           --
│    │    └─Conv2d: 3-23                 [1, 25, 28, 28]           2,400
│    │    └─Conv2d: 3-24                 [1, 64, 28, 28]           4,800
│    └─BatchNorm2d: 2-40                 [1, 64, 28, 28]           128
│    └─ReLU: 2-41                        [1, 64, 28, 28]           --
│    └─MaxPool2d: 2-42                   [1, 64, 14, 14]           --
│    └─Sequential: 2-43                  [1, 32, 14, 14]           --
│    │    └─Conv2d: 3-25                 [1, 17, 14, 14]           1,088
│    │    └─Conv2d: 3-26                 [1, 32, 14, 14]           544
│    └─BatchNorm2d: 2-44                 [1, 32, 14, 14]           64
│    └─ReLU: 2-45                        [1, 32, 14, 14]           --
│    └─Sequential: 2-46                  [1, 64, 14, 14]           --
│    │    └─Conv2d: 3-27                 [1, 32, 14, 14]           3,072
│    │    └─Conv2d: 3-28                 [1, 64, 14, 14]           6,144
│    └─BatchNorm2d: 2-47                 [1, 64, 14, 14]           128
│    └─ReLU: 2-48                        [1, 64, 14, 14]           --
│    └─Sequential: 2-49                  [1, 32, 14, 14]           --
│    │    └─Conv2d: 3-29                 [1, 19, 14, 14]           1,216
│    │    └─Conv2d: 3-30                 [1, 32, 14, 14]           608
│    └─BatchNorm2d: 2-50                 [1, 32, 14, 14]           64
│    └─ReLU: 2-51                        [1, 32, 14, 14]           --
│    └─Sequential: 2-52                  [1, 64, 14, 14]           --
│    │    └─Conv2d: 3-31                 [1, 38, 14, 14]           3,648
│    │    └─Conv2d: 3-32                 [1, 64, 14, 14]           7,296
│    └─BatchNorm2d: 2-53                 [1, 64, 14, 14]           128
│    └─ReLU: 2-54                        [1, 64, 14, 14]           --
│    └─Sequential: 2-55                  [1, 64, 14, 14]           --
│    │    └─Conv2d: 3-33                 [1, 57, 14, 14]           10,944
│    │    └─Conv2d: 3-34                 [1, 64, 14, 14]           10,944
│    └─BatchNorm2d: 2-56                 [1, 64, 14, 14]           128
│    └─ReLU: 2-57                        [1, 64, 14, 14]           --
│    └─Sequential: 2-58                  [1, 64, 14, 14]           --
│    │    └─Conv2d: 3-35                 [1, 76, 14, 14]           14,592
│    │    └─Conv2d: 3-36                 [1, 64, 14, 14]           14,592
│    └─BatchNorm2d: 2-59                 [1, 64, 14, 14]           128
│    └─ReLU: 2-60                        [1, 64, 14, 14]           --
│    └─MaxPool2d: 2-61                   [1, 64, 7, 7]             --
│    └─Sequential: 2-62                  [1, 64, 7, 7]             --
│    │    └─Conv2d: 3-37                 [1, 76, 7, 7]             14,592
│    │    └─Conv2d: 3-38                 [1, 64, 7, 7]             14,592
│    └─BatchNorm2d: 2-63                 [1, 64, 7, 7]             128
│    └─ReLU: 2-64                        [1, 64, 7, 7]             --
│    └─Sequential: 2-65                  [1, 64, 7, 7]             --
│    │    └─Conv2d: 3-39                 [1, 86, 7, 7]             16,512
│    │    └─Conv2d: 3-40                 [1, 64, 7, 7]             16,512
│    └─BatchNorm2d: 2-66                 [1, 64, 7, 7]             128
│    └─ReLU: 2-67                        [1, 64, 7, 7]             --
│    └─Conv2d: 2-68                      [1, 64, 7, 7]             4,096
│    └─BatchNorm2d: 2-69                 [1, 64, 7, 7]             128
│    └─ReLU: 2-70                        [1, 64, 7, 7]             --
│    └─Conv2d: 2-71                      [1, 16, 7, 7]             1,024
│    └─BatchNorm2d: 2-72                 [1, 16, 7, 7]             32
│    └─ReLU: 2-73                        [1, 16, 7, 7]             --
│    └─Conv2d: 2-74                      [1, 16, 7, 7]             256
│    └─BatchNorm2d: 2-75                 [1, 16, 7, 7]             32
│    └─ReLU: 2-76                        [1, 16, 7, 7]             --
│    └─Conv2d: 2-77                      [1, 12, 7, 7]             204
==========================================================================================
Total params: 185,216
Trainable params: 185,216
Non-trainable params: 0
Total mult-adds (M): 101.88
==========================================================================================
Input size (MB): 0.60
Forward/backward pass size (MB): 45.62
Params size (MB): 0.74
Estimated Total Size (MB): 46.96
==========================================================================================
Starting script


***Start Training: 23:50:30


=== EPOCH 0/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
43.36      |14.16     |20.89     |6.64      |1.68      |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
49.88      |18.53     |20.76     |6.40      |4.19      |

Saving model with new best validation loss: 49.876

=== EPOCH 1/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
43.04      |14.01     |20.78     |6.61      |1.63      |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
50.04      |18.53     |20.65     |6.63      |4.23      |


=== EPOCH 2/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
43.11      |14.12     |20.77     |6.58      |1.65      |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
50.16      |18.61     |20.73     |6.57      |4.25      |


=== EPOCH 3/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
43.02      |14.02     |20.79     |6.61      |1.60      |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
50.03      |18.59     |20.66     |6.54      |4.24      |


=== EPOCH 4/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|    |Smoke AP   |Smoke AR  |Fire AP   |Fire AR   |mAP:0.50  |
-----------|----------|--------------------------------|    |-----------|----------|--------------------------------|
43.34      |14.21     |20.87     |6.63      |1.64      |    |0.5809     |0.6594    |0.5881    |0.6989    |0.5845    |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|    |Smoke AP   |Smoke AR  |Fire AP   |Fire AR   |mAP:0.50  |
-----------|----------|--------------------------------|    |-----------|----------|--------------------------------|
50.11      |18.56     |20.87     |6.36      |4.31      |    |0.6240     |0.6951    |0.6214    |0.6615    |0.6227    |

Saving model with new best mAP: 0.6227
Saving last model

***Script finished: 00:28:24

Time elapsed: 0:37:53.905474

Trainable parameters = 185216
Total parameters = 185216


Trainable parameters = 287276
Total parameters = 287276

Starting script


***Start Training: 00:45:46


=== EPOCH 0/9 ===
Learning Rate = 0.0005

TRAIN STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
57.14      |19.75     |26.85     |7.48      |3.06      |

VAL STATS
Total Loss |Box Loss  |Conf Loss |NoObj Loss|Class Loss|     | No mAP in this epoch |
-----------|----------|--------------------------------|
57.15      |21.49     |23.42     |8.05      |4.18      |

Starting script


***Start Training: 01:05:23


=== EPOCH 0/9 ===
Learning Rate = 0.0005

